---
import { getCollection } from "astro:content";
import MainLayout from "../../layouts/MainLayout.astro";

// Generate static paths for all blog posts
export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  return blogEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

// Get the blog post data
const { entry } = Astro.props;
const {Content} = await entry.render();

// Format publish date
const formatDate = (dateStr: string) => {
  return dateStr; // Use as-is for now, or implement formatting logic
};
---

<MainLayout title={entry.data.title}>
  <article class="max-w-3xl mx-auto px-4 py-12">
    <header class="mb-8">
      <div class="flex items-center gap-2 mb-4">
        <span class="bg-blue-100 text-blue-700 dark:bg-blue-900/30 dark:text-blue-300 px-3 py-1 rounded-full text-sm font-medium">
          {entry.data.category}
        </span>
        <span class="text-muted-foreground text-sm">•</span>
        <span class="text-muted-foreground text-sm">{formatDate(entry.data.publishDate)}</span>
        <span class="text-muted-foreground text-sm">•</span>
        <span class="text-muted-foreground text-sm">{entry.data.readTime}</span>
      </div>
      <h1 class="font-serif font-bold text-3xl md:text-4xl lg:text-5xl mb-4">
        {entry.data.title}
      </h1>
      <p class="text-xl text-muted-foreground mb-6">
        {entry.data.excerpt}
      </p>
      
      <div class="flex items-center gap-4">
        <div class="w-12 h-12 rounded-full overflow-hidden">
          <img 
            src={entry.data.author.avatar} 
            alt={entry.data.author.name} 
            class="w-full h-full object-cover"
          />
        </div>
        <div>
          <div class="font-medium">{entry.data.author.name}</div>
          <div class="text-sm text-muted-foreground">{entry.data.author.bio}</div>
        </div>
      </div>
    </header>
    
    <div class="aspect-video w-full rounded-lg overflow-hidden mb-10">
      <img 
        src={entry.data.image} 
        alt={entry.data.title} 
        class="w-full h-full object-cover"
      />
    </div>
    
    <div class="prose prose-lg dark:prose-invert max-w-none">
      <Content />
    </div>
    
    <div class="mt-12 pt-8 border-t">
      <div class="flex flex-wrap gap-2">
        {entry.data.tags.map((tag) => (
          <a 
            href={`/tags/${tag.toLowerCase().replace(/ /g, '-')}`}
            class="bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 px-3 py-1 rounded-full text-sm transition-colors"
          >
            #{tag}
          </a>
        ))}
      </div>
    </div>
    </article>
</MainLayout>

```
